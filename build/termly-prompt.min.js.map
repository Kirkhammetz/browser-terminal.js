{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bin/classes/Command.js","bin/classes/File.js","bin/classes/Filesystem.js","bin/classes/Interpreter.js","bin/classes/Prompt.js","bin/classes/Shell.js","bin/configs/builtin-commands.js","bin/configs/default-filesystem.js","bin/termly-prompt.js","node_modules/promise-polyfill/promise.js","node_modules/whatwg-fetch/fetch.js","package.json"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Command","_ref","arguments","undefined","name","fn","_ref$type","type","_ref$shell","shell","_ref$man","man","_classCallCheck","this","bind","args","Array","isArray","File","_ref$name","_ref$content","content","uid","genUid","user","group","permission","s4","Math","floor","random","toString","substring","DEFAULT_FS","Filesystem","fs","_typeof","JSON","parse","stringify","FileSystem","initFs","cwd","buildVirtualFs","obj","key","hasOwnProperty","path","match","pathArray","split","shift","pop","concat","output","join","replace","slice","node","fileWalker","cb","traverseFiles","traverseDirs","fileType","pathStringToArray","result","getNode","err","cwdAsString","pathArrayToString","Interpreter","cmd","parsed","message","command","ShellCommands","filter","exec","format","ShellReference","customCommands","Blueprints","Object","keys","map","Shell","Terminal","_ret","selector","options","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","container","document","querySelector","init","_this2","generateRow","addEventListener","stopPropagation","input","focus","_this3","current","classList","remove","prevInput","removeEventListener","submitHandler","div","createElement","add","innerHTML","hostname","getCurrentDirectory","appendChild","out","pre","textContent","_this4","target","size","value","event","which","keyCode","preventDefault","trim","clear","run","then","res","generateOutput","catch","_ref$filesystem","filesystem","_ref$commands","commands","_ref$user","_ref$hostname","polyfills","registerCommands","_extends","global","Promise","fetch","defineProperty","prototype","writable","enumerable","version","description","repository","author","license","help","whoami","about","str","cd","changeDir","ls","list","responseString","listDir","file","cat","readFile","http","method","url","toUpperCase","payload","array","request","headers","Content-Type","body","ok","json","status","statusText","console","log","file.h","etc","apache2","apache2.conf","home","guest","docs","mydoc.md","mydoc2.md","mydoc3.md","root",".zshrc",".oh-my-zsh","themes","noop","thisArg","apply","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","push","_immediateFn","onFulfilled","onRejected","resolve","reject","promise","ret","newValue","finale","_unhandledRejectionFn","len","Handler","done","reason","ex","setTimeoutFunc","setTimeout","prom","all","arr","val","remaining","constructor","race","values","setImmediate","warn","_setImmediateFn","_setUnhandledRejectionFn","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","support","iterable","Symbol","Headers","forEach","append","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","fromCharCode","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","get","rejected","text","decode","normalizeMethod","upcased","methods","indexOf","Request","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","viewClasses","DataView","isView","oldValue","has","callback","entries","clone","response","redirectStatuses","redirect","RangeError","location","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","main","scripts","build","keywords","devDependencies","babel","babel-core","babel-polyfill","babel-preset-es2015","babel-preset-stage-3","babelify","browserify","chai","chalk","gulp","gulp-rename","gulp-sourcemaps","gulp-uglify","gulp-util","mocha","promise-polyfill","uglify-js","utils-merge","vinyl-buffer","vinyl-source-stream","watchify","whatwg-fetch"],"mappings":"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","file":"termly-prompt.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Command Class\n * @param name [String], fn [Function]\n *\n * don't pass arrow function if you want to use this inside your command function to access various shared shell object\n */\nclass Command {\n  constructor({ name, fn, type = 'usr', shell = undefined, man = ''} = {}){\n    if (typeof name !== 'string') throw Error('Command name must be a string')\n    if (typeof fn !== 'function') throw Error('Command function must be... a function')\n\n    /**\n     * use whole function instead of arrow if you want to access\n     * circular reference of Command\n     */\n    this.fn = fn.bind(this)\n    this.name = name\n    this.type = type\n    this.man = man\n\n    if (shell) {\n      this.shell = shell\n    }\n  }\n\n  /**\n   * Dispatch Command Execution\n   *\n   * @tip don't use arrow function in you command if you want the arguments\n   * neither super and arguments get binded in AF.\n   */\n  exec(args = []) {\n    if (!Array.isArray(args)) throw Error('Command exec args must be in an array')\n    if (args.length) return this.fn(args)\n    return this.fn()\n  }\n}\n\nmodule.exports = Command\n","/**\n * @class Single File Class\n * Simulate file properties\n */\nclass File {\n  constructor({ name = '', type = 'file', content = ''} = {}) {\n    this.uid = this.genUid()\n    this.name = name\n    this.type = type\n    this.content = content\n    this.user = 'root'\n    this.group = 'root'\n\n    if (this.type === 'file') {\n      this.permission = 'rwxr--r--'\n    } else {\n      this.permission = 'drwxr-xr-x'\n    }\n\n  }\n\n  genUid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n}\n\nmodule.exports = File\n","const DEFAULT_FS = require('../configs/default-filesystem')\nconst File = require('./File')\n\n/**\n * @class Virtual Filesystem\n * Represented as an object of nodes\n */\nclass Filesystem {\n  constructor(fs = DEFAULT_FS, shell = {}) {\n    this.shell = shell\n    if (typeof fs !== 'object' || Array.isArray(fs)) throw new Error('Virtual Filesystem provided not valid, initialization failed.')\n\n    // Not By Reference.\n    // HACK: Object assign refuse to work as intended.\n    fs = JSON.parse(JSON.stringify(fs))\n    this.FileSystem = this.initFs(fs)\n\n    // CWD for commands usage\n    this.cwd = ['/']\n  }\n\n  /**\n   * Init & Pass Control to recurrsive function\n   * @return new Filesystem as nodes of multiple @class File\n   */\n  initFs(fs) {\n    this.buildVirtualFs(fs)\n    return fs\n  }\n\n  /**\n   * Traverse all node and build a virtual representation of a filesystem\n   * Each node is a File instance.\n   * @param Mocked Filesystem as Object\n   *\n   */\n  buildVirtualFs(obj) {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n          obj[key] = new File({ name: key, content: obj[key], type: 'dir' })\n          this.buildVirtualFs(obj[key].content)\n        } else {\n          obj[key] = new File({ name: key, content: obj[key] })\n        }\n      }\n    }\n  }\n\n  /**\n   * Get a stringed path and return as array\n   * throw error if path format is invalid\n   * Relative Path gets converted using Current Working Directory\n   * @param path {String}\n   * @return Array\n   */\n  pathStringToArray(path = '') {\n    if (!path.length) throw new Error('Path cannot be empty')\n\n    // Check for invalid path, eg. two+ // in a row\n    if (path.match(/\\/{2,}/g)) throw new Error(`-invalid path: ${path}`)\n\n    // Format and Composer array\n    let pathArray = path.split('/')\n    if (pathArray[0] === '') pathArray[0] = '/'\n    if (pathArray[0] === '.') pathArray.shift()\n    if(pathArray[pathArray.length - 1] === '') pathArray.pop()\n    // handle relative path with current working directory\n    if (pathArray[0] !== '/') {\n      pathArray = this.cwd.concat(pathArray)\n    }\n    return pathArray\n  }\n\n  /**\n   * Path from array to String\n   * For presentational purpose.\n   * TODO\n   * @param path [Array]\n   * @return {String}\n   */\n  pathArrayToString(path = []) {\n    if (!Array.isArray(path)) throw new Error('-fatal filesystem: path must be an array')\n    if (!path.length) throw new Error('-invalid filesystem: path not provided')\n    let output = path.join('/')\n    // remove / multiple occurrence\n    return output.replace(/\\/{2,}/g, '/')\n  }\n\n  /**\n   * Luke.. fileWalker\n   * Accepts only Absolute Path, you must convert paths before calling using pathStringToArray\n   * @param cb executed on each file found\n   * @param fs [Shell Virtual Filesystem]\n   */\n  fileWalker(path = ['/'], fs = this.FileSystem){\n    if (!Array.isArray(path)) throw new Error('Path must be an array of nodes, use Filesystem.pathStringToArray({string})')\n\n    // avoid modifying external path reference\n    path = path.slice(0)\n\n    // TODO:\n    //  Choose:\n    //    - Go full pure\n    //    - Work on the reference of the actual node\n    // fs = Object.assign(fs, {})\n\n    // Exit Condition\n    if (!path.length) return fs\n\n    // Get current node\n    let node = path.shift()\n\n    // Go deeper if it's not the root dir\n    if (node !== '/') {\n      // check if node exist\n      if (fs[node]) {\n        // return file or folder\n        fs = fs[node].type === 'dir' ? fs[node].content : fs[node]\n      } else {\n        throw new Error('File doesn\\'t exist')\n      }\n    }\n    return this.fileWalker(path, fs)\n  }\n\n  /**\n   * traverseFiles\n   * accessing all file at least once\n   * calling provided callback on each\n   * @param cb executed on each file found\n   * @param fs [Shell Virtual Filesystem]\n   */\n  traverseFiles(cb = ()=>{}, fs = this.FileSystem){\n    const self = this.traverseFiles\n    for (let node in fs) {\n      if (fs.hasOwnProperty(node)) {\n        if (fs[node].type === 'dir') this.traverseFiles(cb, fs[node].content)\n        else cb(fs[node])\n      }\n    }\n  }\n\n  /**\n   * traverseDirs\n   * accessing all directory at least once\n   * calling provided callback on each\n   * @param cb executed on each file found\n   * @param fs [Shell Virtual Filesystem]\n   */\n  traverseDirs(cb = ()=>{}, fs = this.FileSystem){\n    for (let node in fs) {\n      if (fs.hasOwnProperty(node)) {\n        if (fs[node].type === 'dir') {\n          cb(fs[node])\n          this.traverseDirs(cb, fs[node].content)\n        }\n      }\n    }\n  }\n\n  /**\n   * Get Directory Node\n   * Passed as Reference or Instance,\n   * depend by a line in @method fileWalker, see comment there.\n   * @return Directory Node Object\n   */\n  getNode(path = '', fileType) {\n    if (typeof path !== 'string') throw new Error('Invalid input.')\n    let pathArray, node\n\n    try {\n      pathArray = this.pathStringToArray(path)\n      node = this.fileWalker(pathArray)\n    } catch (e) {\n      throw e\n    }\n\n    /**\n     * ERROR HANDLING\n     */\n\n    // Handle List on a file\n    if (fileType === 'dir' && node.type === 'file') {\n      throw new Error('Its a file not a directory')\n    }\n    // Handle readfile on a dir\n    if (fileType === 'file' && node.type === 'dir') {\n      throw new Error('Its a directory not a file')\n    }\n    // handle readfile on non existing file\n    if (fileType === 'file' && !node.type) {\n      throw new Error('Invalid file path')\n    }\n    // handle invalid / nonexisting path\n    if (!node) {\n      throw new Error('Invalid path, file/folder doesn\\'t exist')\n    }\n\n    return { path, pathArray , node }\n  }\n\n  /**\n   * Change Current Working Directory Gracefully\n   * @return Message String.\n   */\n  changeDir(path = '') {\n    let result\n    try {\n      result = this.getNode(path, 'dir')\n    } catch (err) {\n      throw err\n    }\n    this.cwd = result.pathArray\n    return `changed directory.`\n  }\n\n  /**\n   * List Current Working Directory Files\n   * @return {}\n   */\n  listDir(path = '') {\n    let result\n    try {\n      result = this.getNode(path, 'dir')\n    } catch (err) {\n      throw err\n    }\n    return result.node\n  }\n\n  readFile(path = '') {\n    let result\n    try {\n      result = this.getNode(path, 'file')\n    } catch (err) {\n      throw err\n    }\n    return result.node\n  }\n\n  getCurrentDirectory() {\n    let cwdAsString\n    try {\n      cwdAsString = this.pathArrayToString(this.cwd)\n    } catch (e) {\n      return '-invalid filesystem: An error occured while parsing current working directory to string.'\n    }\n    return cwdAsString\n  }\n\n}\n\nmodule.exports = Filesystem\n","const Command = require('./Command')\n\n/**\n *\n * Interpreter\n * Is the parent Class of the Main Shell Class\n * - This class is the one that parse and run exec of command\n * - Parsing of builtin command on runtime happen here\n * - Will parse custom user Command too\n *\n */\nclass Interpreter {\n\n  /**\n   * Parse Command\n   * String is splitted by spaces\n   * @return Array of args as in C\n   * ---\n   *   IDEA: Regexp every word is an argument, to proide something else you must enclose\n   *   it in single or double quotes.\n   *   To pass a json use single quotes since the json starndard requires double quotes in it\n   *   @return cmd.match(/[^\\s\"']+|\"([^\"]*)\"|'([^']*)'/g)\n   * ---\n   */\n  parse(cmd) {\n    if (typeof cmd !== 'string') throw new Error('Command must be a string')\n    if (!cmd.length) throw new Error('Command is empty')\n    return cmd.split(' ')\n  }\n\n  /**\n   * Format Output\n   * return error if function is returned\n   * convert everything else to json.\n   * @return JSON parsed\n   */\n  format(output) {\n    if (typeof output === 'function') {\n      return '-invalid command: Command returned invalid data type.'\n    }\n    if (output === undefined || typeof output === 'undefined') {\n      return '-invalid command: Command returned no data.'\n    }\n    return output\n    // try {\n    //   return JSON.stringify(output)\n    // } catch (e) {\n    //   return '-invalid command: Command returned invalid data type: ' + e.message\n    // }\n  }\n\n  /**\n   * Exec Command\n   * @return {String}\n   */\n  exec(cmd) {\n\n    //  Parse Command String: [0] = command name, [1+] = arguments\n    let parsed\n    try {\n      parsed = this.parse(cmd)\n    } catch (e) {\n      return '-fatal command: ' + e.message || 'Some Error Occured'\n    }\n\n    //  X-check if command exist\n    const command = this.ShellCommands[parsed[0]]\n    if (!command) {\n      return `-error shell: Command <${parsed[0]}> doesn't exist.\\n`\n    }\n\n    //  get arguments array and execute command return error if throw\n    const args = parsed.filter((e, i) => i > 0)\n    let output\n    try {\n      output = command.exec(args)\n    } catch (e) {\n      return '-fatal command: ' + e.message\n    }\n\n    //  Format data and Return\n    return this.format(output)\n  }\n\n  /*\n   * Generate Builtin Command List\n   */\n  registerCommands(ShellReference, customCommands = undefined) {\n    let Blueprints = require('../configs/builtin-commands')\n    /**\n     * If custom commands are passed check for valid type\n     * If good to go generate those commands\n     */\n    if (customCommands) {\n      if (typeof customCommands === 'object' && !Array.isArray(customCommands)) {\n        Blueprints = customCommands\n      } else {\n        throw new Error('Custom command provided are not in a valid format.')\n      }\n    }\n\n    const ShellCommands = {}\n    Object.keys(Blueprints).map((key) => {\n      const cmd = Blueprints[key]\n      if (typeof cmd.name === 'string' && typeof cmd.fn === 'function') {\n        cmd.shell = ShellReference\n        ShellCommands[key] = new Command(cmd)\n      }\n    })\n    return ShellCommands\n  }\n}\n\nmodule.exports = Interpreter\n","var Shell = require('./Shell')\n\n/**\n * Terminal\n * Wrapper on the Shell class\n * This will only handle the UI of the terminal.\n * You can use it or use directly the browser-shell.js\n * and create your custom UI calling and displaying the @method run() commands\n * ___________\n * Options:\n *  - filesystem {Object}\n *  - commands {Object}\n *  - user {String}\n *  - hostname {String}\n */\nclass Terminal extends Shell{\n  constructor(selector = undefined, options = {}) {\n    super(options) // must pass option here\n\n    if (!selector) throw new Error('No wrapper element selector provided')\n    try {\n      this.container = document.querySelector(selector)\n      if (!this.container) throw new Error('new Terminal(): DOM element not found')\n    } catch (e) {\n      throw new Error('new Terminal(): Not valid DOM selector.')\n    }\n\n    return this.init()\n  }\n\n  init() {\n    this.generateRow()\n    this.container.addEventListener('click', (e) => {\n      e.stopPropagation()\n      let input = this.container.querySelector('.current .terminal-input')\n      if (input) input.focus()\n    })\n  }\n\n  generateRow() {\n    var that = this\n\n    // Remove previous current active row\n    let current = document.querySelector('.current.terminal-row')\n    if (current) {\n      current.classList.remove('current')\n    }\n\n    let prevInput = document.querySelector('.terminal-input')\n    if (prevInput) {\n      prevInput.removeEventListener('keyup', this.submitHandler)\n    }\n\n    const div = document.createElement('div')\n    div.classList.add('current', 'terminal-row')\n    div.innerHTML = ''\n    div.innerHTML += `<span class=\"terminal-info\">${this.user}@${this.hostname} - ${this.fs.getCurrentDirectory()} ➜ </span>`\n    div.innerHTML += `<input type=\"text\" class=\"terminal-input\" size=\"2\" style=\"cursor:none;\">`\n\n    // add new row and focus it\n    this.container.appendChild(div)\n    let input = this.container.querySelector('.current .terminal-input')\n    input.addEventListener('keyup', e => this.submitHandler(e))\n    input.focus()\n\n    return input\n  }\n\n  generateOutput(out = '') {\n    const pre = document.createElement('pre')\n    pre.textContent = out\n    this.container.appendChild(pre)\n    return this.generateRow()\n  }\n\n  clear() {\n    this.container.innerHTML = ''\n    return this.generateRow()\n  }\n\n  submitHandler(e) {\n    e.stopPropagation()\n    // RUN when ENTER is pressed\n    e.target.size = e.target.value.length + 2 || 3\n    if (event.which == 13 || event.keyCode == 13) {\n      e.preventDefault()\n      const command = e.target.value.trim()\n\n      if (command === 'clear') return this.clear()\n\n      // EXEC\n      const output = this.run(command)\n      // if is a {Promise} resolve it ad parse as json\n      if (output['then']) {\n        return output.then(res => {\n          if (typeof res === 'object') {\n            try {\n              res = JSON.stringify(res, null, 2)\n            } catch (e) {\n              return this.generateOutput('-fatal http: Response received but had a problem parsing it.')\n            }\n          }\n          return this.generateOutput(res)\n        }).catch(err => this.generateOutput(err.message))\n      }\n      return this.generateOutput(output)\n    }\n  }\n}\n\nmodule.exports = Terminal\n","const Interpreter = require('./Interpreter')\nconst Filesystem = require('./Filesystem')\n\n/**\n * Shell Class inherits from Interpreter\n * Options:\n *  - filesystem {Object}\n *  - commands {Object}\n *  - user {String}\n *  - hostname {String}\n */\nclass Shell extends Interpreter{\n  constructor({ filesystem = undefined, commands = undefined, user = 'root', hostname = 'my.host.me' } = {}) {\n    super()\n\n    this.polyfills()\n\n    /**\n     * Create the virtual filesystem\n     * @return reference to instance of @class Filesystem\n     */\n    this.fs = new Filesystem(filesystem, this)\n    this.user = user\n    this.hostname = hostname\n\n    // Init builtin commands, @method in parent\n    // pass shell reference\n    this.ShellCommands = this.registerCommands(this)\n    this.ShellCommands = {\n      ...this.ShellCommands,\n      ...this.registerCommands(this, commands),\n    }\n  }\n\n  polyfills() {\n    if (!global.Promise) {\n      global.Promise = require('promise-polyfill').Promise\n    }\n    if (!global.fetch) {\n      global.fetch = require('whatwg-fetch')\n    }\n    return true\n  }\n\n  /**\n   * Pass control to Interpreter\n   * @return [String] OR {Promise} to resolve from your wrapper.\n   */\n  run(cmd) {\n    return this.exec(cmd)\n  }\n}\n\nObject.defineProperty(Shell.prototype, 'fs', { writable: true, enumerable: false })\nObject.defineProperty(Shell.prototype, 'ShellCommands', { writable: true, enumerable: false })\n\nmodule.exports = Shell\n","const { name, version, description, repository, author, license } = require('../../package.json')\nmodule.exports = {\n\n  /**\n   * Help\n   * @return List of commands\n   */\n  help: {\n    name: 'help',\n    type: 'builtin',\n    man: 'List of available commands',\n    fn: function help() {\n      return `Commands available: ${Object.keys(this.shell.ShellCommands).join(', ')}`\n    }\n  },\n\n  whoami: {\n    name: 'whoami',\n    type: 'builtin',\n    man: 'Current user',\n    fn: function whoami() {\n      return this.shell.user\n    },\n  },\n\n  about: {\n    name: 'about',\n    type: 'builtin',\n    man: 'About this project',\n    fn: function about() {\n      let str = ''\n      str += `name: ${name}\\n`\n      str += `version: ${version}\\n`\n      str += `description: ${description}\\n`\n      str += `repository: ${repository}\\n`\n      str += `author: ${author}\\n`\n      str += `license: ${license}\\n`\n      return str\n    }\n  },\n\n  /**\n   * Return passed arguments, for testing purposes\n   */\n  arguments: {\n    name: 'arguments',\n    type: 'builtin',\n    man: 'Return argument passed, used for testing purpose',\n    fn: args => args\n  },\n\n  /**\n   * Change Directory\n   * @return Success/Fail Message String\n   */\n  cd: {\n    name: 'cd',\n    type: 'builtin',\n    man: 'Change directory, pass absolute or relative path: eg. cd /etc, cd / cd/my/nested/dir',\n    fn: function cd(path) {\n      if (!path) throw new Error('-invalid No path provided.')\n      path = path.join()\n      try{\n        return this.shell.fs.changeDir(path)\n      } catch(e) {\n        throw e\n      }\n    }\n  },\n\n  /**\n   * ls Command\n   * List directory files\n   * @param array of args\n   * @return formatted String\n   */\n  ls: {\n    name: 'ls',\n    type: 'builtin',\n    man: 'list directory files, pass absolute/relative path, if empty list current directory',\n    fn: function ls(path = ['./'] ) {\n      path = path.join()\n      let list, responseString = ''\n      try{\n        list = this.shell.fs.listDir(path)\n      } catch(e) {\n        throw e\n      }\n      for (let file in list) {\n        if (list.hasOwnProperty(file)) {\n          responseString += `${list[file].permission}\\t${list[file].user} ${list[file].group}\\t${list[file].name}\\n`\n        }\n      }\n      return responseString\n    }\n  },\n\n  /**\n   * CAT Command\n   * Read File\n   * @return formatted String\n   */\n  cat: {\n    name: 'cat',\n    type: 'builtin',\n    man: 'Return file content, take one argument: file path (relative/absolute)',\n    fn: function(path = ['./']) {\n      path = path.join()\n      let file, responseString = ''\n      try{\n        file = this.shell.fs.readFile(path)\n      } catch(e) {\n        throw e\n      }\n      return file.content\n    }\n  },\n\n  /**\n   * Man\n   * Return command manual info\n   * @return {string}\n   */\n  man: {\n    name: 'man',\n    type: 'builtin',\n    man: 'Command manual, takes one argument, command name',\n    fn: function man(args) {\n      if (!args || !args[0]) throw new Error('man: no command provided.')\n      let command = args[0]\n      if (!this.shell.ShellCommands[command]) throw new Error('command doesn\\'t exist.')\n      if (!this.shell.ShellCommands[command].man) throw new Error('no manual entry for this command.')\n      return this.shell.ShellCommands[command].man\n    },\n  },\n\n  /**\n   * HTTP\n   * Return Data from an HTTP request\n   * FIXME: NEED FIXS FOR FORM DATA WITH SPACES\n   * @return {string}\n   */\n  http: {\n    name: 'http',\n    type: 'builtin',\n    man: 'Send http requests.\\n syntax: http METHOD [property:data,] URL.\\neg: http GET http://jsonplaceholder.typicode.com/\\nhttp POST title:MyTitle http://jsonplaceholder.typicode.com/posts',\n    fn: function http(args = []) {\n      if (!args || !args.length || args.length < 2) throw new Error(`http: no parameters provided, provide URL and/or method \\n help: ${this.shell.ShellCommands['http'].man}`)\n\n      // Get Method and URL\n      let method, url\n      method = args[0].toUpperCase()\n      url = args[args.length - 1]\n\n      /*\n       * Build Payload\n       * If args > 2 there are values in beetween method and url\n       * format prop:value\n       * FIXME Space not allowed, must change how commands arguments are parsed\n       */\n      let payload = {}\n      if (args.length > 2) {\n        args.map((e, i, array) => {\n          if (i != 0 && i !== args.length - 1) {\n            let parse = e.split(':')\n            payload[parse[0]] = parse[1]\n          }\n        })\n      }\n      let request = {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n      if (method !== 'GET') request.body = JSON.stringify(payload)\n      return fetch(url, request).then((res) => {\n        if (res.ok) return res.json()\n        throw new Error(`Request Failed (${res.status || 500}): ${res.statusText || 'Some Error Occured.'}`)\n      }).catch((err) => {\n        console.log(err)\n      })\n    },\n  },\n\n}\n","module.exports = {\n\n  'file.h': '#include <nope.h>',\n\n  etc: {\n    apache2: {\n      'apache2.conf': 'Not What you were looking for :)',\n    },\n  },\n\n  home: {\n    guest: {\n      docs: {\n        'mydoc.md': 'TestFile',\n        'mydoc2.md': 'TestFile2',\n        'mydoc3.md': 'TestFile3',\n      },\n    },\n  },\n\n  root:{\n    '.zshrc': 'not even close :)',\n    '.oh-my-zsh': {\n      themes: {},\n    },\n  },\n}\n","/**\n * Shell Only\n * @type {Class}\n * Init the shell with command and filesystem\n * @method execute() exposed to query the Shell with commands\n */\nglobal['TermlyPrompt'] = require('./classes/Prompt')\n","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","module.exports={\n  \"name\": \"termly.js\",\n  \"version\": \"2.0.0\",\n  \"description\": \"Simple, Extensible, Lightweight Javascript Browser Terminal Simulator!\",\n  \"main\": \"dist/termly.min.js\",\n  \"scripts\": {\n    \"test\": \"mocha --compilers babel-core/register tests/\",\n    \"build\": \"gulp\"\n  },\n  \"keywords\": [\n    \"terminal\",\n    \"javascript\",\n    \"simulator\",\n    \"browser\",\n    \"presentation\",\n    \"mockup\",\n    \"demo\",\n    \"cli\",\n    \"prompt\",\n    \"commands\",\n    \"no depency\",\n    \"lightweight\",\n    \"js\",\n    \"vanilla\"\n  ],\n  \"repository\": \"https://github.com/Kirkhammetz/termly.js\",\n  \"author\": \"Simone Corsi\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.21.0\",\n    \"babel-polyfill\": \"^6.22.0\",\n    \"babel-preset-es2015\": \"^6.18.0\",\n    \"babel-preset-stage-3\": \"^6.17.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browserify\": \"^13.3.0\",\n    \"chai\": \"^3.5.0\",\n    \"chalk\": \"^1.1.3\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sourcemaps\": \"^2.4.0\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.8\",\n    \"mocha\": \"^3.2.0\",\n    \"promise-polyfill\": \"^6.0.2\",\n    \"uglify-js\": \"^2.6.4\",\n    \"utils-merge\": \"^1.0.0\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.8.0\",\n    \"whatwg-fetch\": \"^2.0.2\"\n  }\n}\n"]}