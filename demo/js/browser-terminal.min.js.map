{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bin/browser-terminal.js","bin/classes/Terminal.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","Terminal","_ref","selector","_classCallCheck","this","match","container","document","getElementById","Node"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,4BCMAK,GAAA,SAAqBX,EAAQ,oSCCvBY,GACJ,QAAAA,GAAAC,GAA0B,GAAZC,GAAYD,EAAZC,QACZ,IADwBC,EAAAC,KAAAJ,IACnBE,EAAU,KAAM,IAAIX,OAAM,uCAE/B,IAAIW,EAASG,MAAM,SACjB,IAEE,GADAD,KAAKE,UAAYC,SAASC,eAAeN,GACrCE,KAAKE,oBAAqBG,MAAM,KAAM,IAAIlB,OAAM,uBACpD,MAAOX,GACP,KAAM,IAAIW,OAAM,4BAMxBO,GAAOJ,QAAUM","file":"browser-terminal.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Shell Only\n * @type {Class}\n * Init the shell with command and filesystem\n * @method execute() exposed to query the Shell with commands\n */\nglobal['Terminal'] = require('./classes/Terminal')\n","/**\n * Terminal\n * Wrapper on the Shell class\n * This will only handle the UI of the terminal.\n * You can use it or use directly the browser-shell.js\n * and create your custom UI calling and displaying the Shell.run() commands\n */\nclass Terminal {\n  constructor({ selector }) {\n    if (!selector) throw new Error('No wrapper element selector provided')\n\n    if (selector.match(/^\\#.+/)) {\n      try {\n        this.container = document.getElementById(selector)\n        if (this.container instanceof Node) throw new Error('Invalid DOM element')\n      } catch (e) {\n        throw new Error('Not valid DOM selector.')\n      }\n    }\n  }\n}\n\nmodule.exports = Terminal\n"]}